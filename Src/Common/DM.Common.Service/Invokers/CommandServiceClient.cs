//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DM.Common.Service.Invokers
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "CommandServiceProvider.ICommandService")]
    public interface ICommandService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ICommandService/Invoke", ReplyAction = "http://tempuri.org/ICommandService/InvokeResponse")]
        string Invoke(string request);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/ICommandService/Invoke", ReplyAction = "http://tempuri.org/ICommandService/InvokeResponse")]
        System.IAsyncResult BeginInvoke(string request, System.AsyncCallback callback, object asyncState);

        string EndInvoke(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandServiceChannel : DM.Common.Service.Invokers.ICommandService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvokeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public InvokeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandServiceClient : System.ServiceModel.ClientBase<DM.Common.Service.Invokers.ICommandService>, DM.Common.Service.Invokers.ICommandService
    {

        private BeginOperationDelegate onBeginInvokeDelegate;

        private EndOperationDelegate onEndInvokeDelegate;

        private System.Threading.SendOrPostCallback onInvokeCompletedDelegate;

        public CommandServiceClient()
        {
        }

        public CommandServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public CommandServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public CommandServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public CommandServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public event System.EventHandler<InvokeCompletedEventArgs> InvokeCompleted;

        public string Invoke(string request)
        {
            return base.Channel.Invoke(request);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInvoke(string request, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginInvoke(request, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndInvoke(System.IAsyncResult result)
        {
            return base.Channel.EndInvoke(result);
        }

        private System.IAsyncResult OnBeginInvoke(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string request = ((string)(inValues[0]));
            return this.BeginInvoke(request, callback, asyncState);
        }

        private object[] OnEndInvoke(System.IAsyncResult result)
        {
            string retVal = this.EndInvoke(result);
            return new object[] {
                    retVal};
        }

        private void OnInvokeCompleted(object state)
        {
            if ((this.InvokeCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InvokeCompleted(this, new InvokeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void InvokeAsync(string request)
        {
            this.InvokeAsync(request, null);
        }

        public void InvokeAsync(string request, object userState)
        {
            if ((this.onBeginInvokeDelegate == null))
            {
                this.onBeginInvokeDelegate = new BeginOperationDelegate(this.OnBeginInvoke);
            }
            if ((this.onEndInvokeDelegate == null))
            {
                this.onEndInvokeDelegate = new EndOperationDelegate(this.OnEndInvoke);
            }
            if ((this.onInvokeCompletedDelegate == null))
            {
                this.onInvokeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInvokeCompleted);
            }
            base.InvokeAsync(this.onBeginInvokeDelegate, new object[] {
                        request}, this.onEndInvokeDelegate, this.onInvokeCompletedDelegate, userState);
        }
    }
}
