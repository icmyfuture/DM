<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <!--{TextBox-->

    <ContextMenu x:Key="EmptyTextBoxContextMenu" Visibility="Collapsed">
    </ContextMenu>

    <Style x:Key="BaseTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Template" Value="{DynamicResource TextBox}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="#ff151515"/>
        <Setter Property="BorderBrush" Value="#FF505050"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{DynamicResource EmptyTextBoxContextMenu}"/>
    </Style>

    <Style x:Key="CompleteTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Template" Value="{DynamicResource CompleteTextBoxTemplate}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="#323232"/>
        <Setter Property="BorderBrush" Value="#323232"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{DynamicResource EmptyTextBoxContextMenu}"/>
    </Style>

    <Style x:Key="SpecialBaseTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="#3a0d00"/>
        <Setter Property="BorderBrush" Value="#505050"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <ControlTemplate x:Key="CompleteTextBoxTemplate" TargetType="{x:Type TextBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled"/>
                    <VisualState x:Name="ReadOnly"/>
                    <VisualState x:Name="MouseOver"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidFocused"/>
                    <VisualState x:Name="InvalidUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--BorderBrush不能定死，不然验证控件将不能用-->
            <Border x:Name="Border" Opacity="1" BorderBrush="{TemplateBinding BorderBrush}" Background="#ff151515" BorderThickness="1">
                <Grid>
                    <Border BorderThickness="1">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" Height="Auto" VerticalAlignment="Stretch" BorderBrush="{x:Null}"/>
                    </Border>
                </Grid>
            </Border>
            <Border x:Name="HoverBorder" Background="#ff252525"  IsHitTestVisible="False" Opacity="0" BorderBrush="#ff6c6c6c" BorderThickness="{TemplateBinding BorderThickness}"/>
            <Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0" BorderBrush="#ff6c6c6c" BorderThickness="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <!--<MultiTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                </MultiTrigger.ExitActions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </MultiTrigger.EnterActions>-->
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Border" Value="#ff3E3E3E" />
                <Setter Property="BorderBrush" TargetName="Border" Value="#ff505050" />
                <Setter Property="BorderThickness" TargetName="Border" Value="1" />
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" TargetName="Border" Value="#ff3E3E3E" />
                <Setter Property="BorderBrush" TargetName="Border" Value="#ff505050" />
                <Setter Property="BorderThickness" TargetName="Border" Value="1" />
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="TextBox" TargetType="{x:Type TextBox}">
        <ControlTemplate.Resources>
            <!--<Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>-->
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled"/>
                    <VisualState x:Name="ReadOnly"/>
                    <VisualState x:Name="MouseOver"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid"/>
                    <VisualState x:Name="InvalidFocused"/>
                    <VisualState x:Name="InvalidUnfocused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <!--BorderBrush不能定死，不然验证控件将不能用-->
            <Border x:Name="Border" Opacity="1" BorderBrush="{TemplateBinding BorderBrush}" Background="#ff151515" BorderThickness="1">
                <Grid>
                    <Border BorderThickness="1">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" Height="Auto" VerticalAlignment="Stretch" BorderBrush="{x:Null}"/>
                    </Border>
                </Grid>
            </Border>
            <Border x:Name="HoverBorder" Background="#ff252525"  IsHitTestVisible="False" Opacity="0" BorderBrush="#ff6c6c6c" BorderThickness="{TemplateBinding BorderThickness}"/>
            <Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0" BorderBrush="#ff6c6c6c" BorderThickness="1" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <!--<MultiTrigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                </MultiTrigger.ExitActions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </MultiTrigger.EnterActions>-->
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Border" Value="#ff3E3E3E" />
                <Setter Property="BorderBrush" TargetName="Border" Value="#ff505050" />
                <Setter Property="BorderThickness" TargetName="Border" Value="1" />
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" TargetName="Border" Value="#ff3E3E3E" />
                <Setter Property="BorderBrush" TargetName="Border" Value="#ff505050" />
                <Setter Property="BorderThickness" TargetName="Border" Value="1" />
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="NobgTextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                       Duration="00:00:00.0010000" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value=".7" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" Opacity="1" BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="1">
                            <Grid>
                                <Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#FF6B6B6B" />
                                <Border BorderThickness="1">
                                    <ScrollViewer  BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" x:Name="ContentElement">
                                        <ContentPresenter Content="{TemplateBinding Text}"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0"
                        Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="HoverBorder" IsHitTestVisible="False" Opacity="0"
                        BorderBrush="{x:Null}" BorderThickness="2" CornerRadius="2,2,2,2" />
                        <Border x:Name="FocusVisualElement" IsHitTestVisible="False" Opacity="0"
                        BorderBrush="{x:Null}" BorderThickness="2" CornerRadius="2,2,2,2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>