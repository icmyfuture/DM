<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" >  
    <!--CheckBox-->
    <Style x:Key="BaseCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource NormalBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="4,1,0,0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">                                
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                            	<VisualState x:Name="Checked">
                            		<Storyboard>
                            			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                            				<SplineDoubleKeyFrame KeyTime="0" Value="1" />
                            			</DoubleAnimationUsingKeyFrames>
                            		</Storyboard>
                            	</VisualState>
                            	<VisualState x:Name="Unchecked" />
                            	<VisualState x:Name="Indeterminate">
                            		<Storyboard>
                            			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                            				<SplineDoubleKeyFrame KeyTime="0" Value="1" />
                            			</DoubleAnimationUsingKeyFrames>
                            		</Storyboard>
                            	</VisualState>
                            </VisualStateGroup>
                            <!--<VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Focused" GeneratedDuration="00:00:00.5000000" To="Unfocused" />
                                    <VisualTransition From="Unfocused" GeneratedDuration="00:00:00.3000000" To="Focused" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>-->
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Image Height="15" Margin="1" Width="15" x:Name="Background" Source="/DM.Client.WPF.Controls.Styles;component/Resource/Image/Common/CheckBox/checkbox_nor.png"/>
                            <Image Height="15" Margin="1" Opacity="0" x:Name="CheckIcon" Width="15"  Source="/DM.Client.WPF.Controls.Styles;component/Resource/Image/Common/CheckBox/checkbox_check.png"/>
                            <Image Height="15" Margin="1" Width="15" Opacity="0" x:Name="DisabledVisualElement" Source="/DM.Client.WPF.Controls.Styles;component/Resource/Image/Common/CheckBox/checkbox_dis.png"/>
                            <Image Height="15" Margin="1" Width="15" Opacity="0" x:Name="IndeterminateIcon" Source="/DM.Client.WPF.Controls.Styles;component/Resource/Image/Common/CheckBox/IndeterminateIcon.png"/>
                            <!--<Rectangle Height="16" x:Name="ContentFocusVisualElement" Width="16" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" />-->
                            <Rectangle Height="15" x:Name="ShineRectangle" Width="15" IsHitTestVisible="false" Opacity="1" Stroke="{x:Null}" StrokeThickness="1" Fill="{StaticResource ShineBrush}" Margin="1.041,2.124,-0.042,1.874" d:LayoutOverrides="HorizontalMargin" RadiusX="3" RadiusY="3" />                            
                        </Grid>
                        <ContentPresenter HorizontalAlignment="Left" Margin="2 0 0 0"  x:Name="contentPresenter" VerticalAlignment="Center" Grid.Column="1" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>    
</ResourceDictionary>